1.Quais as diferenças entre os barramentos de dados e de endereços?
O barramento de dados transmite dados entre as unidades ja os enderecos representam a posicao da memoria para que se possa ler algum valor.

2.Quais são as diferenças entre as memórias RAM e ROM?
A memoria RAM apresenta acesso aleatorio ja a memoria ROM pode ser lida mas nao pode ser escrita(menor volume, nao volatil conteudo preservado, velocidade e baixo custo).

3.Considere o código abaixo:

#include <stdio.h>
int main(void)
{
	int i;
	printf("Insira um número inteiro: ");
	scanf("%d", &i);
	if(i%2)
		printf("%d eh impar.\n");
	else
		printf("%d eh par.\n");
	return 0;
}
Para este código, responda: 
(a) A variável i é armazenada na memória RAM ou ROM? Por quê? 
A variavel i esta armazenada na memoria RAM porque quando o sistema for desligado ela perde o seu valor.

(b) O programa compilado a partir deste código é armazenado na memória RAM ou ROM? Por quê?
O codigo sera compilado na memoria ROM sendo assim voce podera reutilizar o codigo.

4.Quais são as diferenças, vantagens e desvantagens das arquiteturas Harvard e Von Neumann?
Existem dois tipos de arquiteturas, arquitetura havard e arquitetura Von Neumann, a arquitetura havard(PICs, Intel 805I, ARM9) permite leitura simultanea de dados e do programa alem de permite barrametos de dados e programas separadamente otimizados. Guarda dados constantes na memoria de programa o que requer instrucoes especificas. Ja a arquitetura von Neumann(MSP430, Freescale, HCS08, ARM7) apresenta uma arquitetura mais simples e menos eficiente que a havard.

5.Considere a variável inteira i, armazenando o valor 0x8051ABCD. Se i é armazenada na memória a partir do endereço 0x0200, como ficam este byte e os seguintes, considerando que a memória é: 
(a) Little-endian; 
0x200: 0xCD
0x201: 0xAB
0x202: 0x51
0x203: 0x80 
(b) Big-endian.
0x200: 0x80
0x201: 0x51
0x202: 0xAB
0x203: 0xCD 

6.Sabendo que o processador do MSP430 tem registradores de 16 bits, como ele soma duas variáveis de 32 bits?
Ele soma duas variaveis de 32 bits observando o Overflow da CPU ou analisando o sinal negativo da flag
